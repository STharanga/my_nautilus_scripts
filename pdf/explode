#!/bin/bash
# 2015-01-14 - by yeKcim
# Installation:
    # Nautilus: copy this file in ~/.local/share/nautilus/scripts/ and chmod +x it
    # Nemo: copy this file in ~/.gnome2/nemo-scripts/ and chmod +x it
# Dependency: pdftk
# Burst multiple pages pdf in multiple files
IFS="
"
################################################
#        notification depends of system        #
################################################
function notif { 
    # the script is running in a term
    if [ $(env | grep '^TERM') ]; then printf "\n#### $(basename "$0") notification ####\n  â‡’  $1\n\n"
    # in x, notifications
    else
        if [ $(which notify-send) ]; then notify-send "$1"
        elif [ $(which zenity) ]; then
            echo "message:$1" | zenity --notification --listen &
        elif [ $(which kdialog) ]; then
            kdialog --title "$1" --passivepopup "This popup will disappear in 5 seconds" 5 &
        elif [ $(which xmessage) ]; then xmessage "$1" -timeout 5
        # You don't have notifications? I don't care, I need to tell you something!
        else
            echo "$1" > "$(basename $0)_notif.txt"
        fi
    fi
}

################################################
#               dependency check               #
################################################
function depend_check {
    if [ ! $(which $1) ]; then
        notif "Error: Could not find \"$1\" application."
        exit 1
    fi
}


################################################
#                    script                    #
################################################
# check if input files > 1
if (( $# <= "0" )); then 
    notif "$# file selected, \"$(basename $0)\" needs at least 1 input file" 
    exit 1
fi

directory=$(pwd)
for arg
do
    
    # input/output
    [ $(env | grep '^TERM') ] && input=$(readlink -f "$arg") || input="$arg";
    input_filename=$(basename "$input")
    input_filename_with_path=$(readlink -f "$input")
        
    type=$(file -ib "$input"|cut -d ";" -f1|cut -d "/" -f2)
    
    case $type in
        "pdf")
            work="pdf"
            for depend in pdftk # add here all dependencies only with space separator
            do
                depend_check $depend
            done ;;
            
        *) work="0";;
    esac

    # input mimetype is supported
    if [[ $work != "0" ]]; then
        mkdir "$directory/${input_filename}_explode" #TODO: check if exist, check rights
        cd "$directory/${input_filename}_explode"
        pdftk "$input_filename_with_path" burst
        rm -f "doc_data.txt"
        cd $directory
    # input mimetype is not supported
    else
        notif "Error: \"$input_filename\" mimetype is not supported"
    fi
done
