#!/bin/bash
# 2015-01-14 - by yeKcim
# Installation:
	# Nautilus: copy this file in ~/.local/share/nautilus/scripts/ and chmod +x it
	# Nemo: copy this file in ~/.gnome2/nemo-scripts/ and chmod +x it
# Dependency: pdftk
# Burst multiple pages pdf in multiple files
IFS="
"
################################################
#        notification depends of system        #
################################################
function notif { 
	# the script is running in a term
	if [ $(env | grep '^TERM') ]; then
		printf "Notification: \"$1\"\n"
	# in x, notifications
	else
		if [ $(which notify-send) ]; then
			notify-send "$1"
		elif [ $(which zenity) ]; then
			echo "message:$1" | zenity --notification --listen &
		elif [ $(which kdialog) ]; then
			kdialog --title "$1" --passivepopup "This popup will disappear in 5 seconds" 5 &
		elif [ $(which xmessage) ]; then
			xmessage "$1" -timeout 5
		# You don't have notifications? I don't care, I need to tell you something!
		else
			echo "$1" > "$(basename $0)_notif.txt"
		fi
	fi
}

directory=$(pwd)
for arg
do
	type=$(mimetype -bM "$arg" | cut -d "/" -f2)
	
	case $type in
		"pdf")
			work="pdf"
			################################################
			#              Dependencies check              #
			################################################
			for command in pdftk # add here all dependencies only with space separator
			do
				if [ ! $(which $command) ]; then
					notif "Error: Could not find \"$command\" application."
					exit 1
				fi
			done ;;
			
		*) work="0";;
	esac

	################################################
	#          input mimetype is supported         #
	################################################
	if [ $work != "0" ]; then
		mkdir "${arg}_explode"
		cd "${arg}_explode"
		pdftk "$directory/$arg" burst
		rm -f "doc_data.txt"
		cd $directory
	################################################
	#        input mimetype is not supported       #
	################################################
	else
		notif "Error: $arg mimetype is not supported"
	fi
done
