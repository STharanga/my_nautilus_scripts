#!/bin/bash
# 2015-01-14 - by yeKcim
# Installation:
	# Nautilus: copy this file in ~/.local/share/nautilus/scripts/ and chmod +x it
	# Nemo: copy this file in ~/.gnome2/nemo-scripts/ and chmod +x it
# Dependency: inkscape
# Convert svg
IFS="
"
################################################
#        notification depends of system        #
################################################
function notif { 
    # the script is running in a term
    if [ $(env | grep '^TERM') ]; then printf "\n#### $(basename "$0") notification ####\n  â‡’  $1\n\n"
    # in x, notifications
    else
        if [ $(which notify-send) ]; then notify-send "$1"
        elif [ $(which zenity) ]; then
            echo "message:$1" | zenity --notification --listen &
        elif [ $(which kdialog) ]; then
            kdialog --title "$1" --passivepopup "This popup will disappear in 5 seconds" 5 &
        elif [ $(which xmessage) ]; then xmessage "$1" -timeout 5
        # You don't have notifications? I don't care, I need to tell you something!
        else
            echo "$1" > "$(basename $0)_notif.txt"
        fi
    fi
}

################################################
#               dependency check               #
################################################
function depend_check {
    if [ ! $(which $1) ]; then
        notif "Error: Could not find \"$1\" application."
        exit 1
    fi
}

################################################
#                    script                    #
################################################
# check if input files > 1
if (( $# <= "0" )); then 
    notif "$# file selected, \"$(basename $0)\" needs at least 1 input file" 
    exit 1
fi

# conversion type?
argfromscriptname=$(echo "$0" | sed -n 's/.*\[\(.*\)\].*/\1/p')

case $argfromscriptname in
    "emf") formatout="M";;
    "eps") formatout="E";;
    "pdf") formatout="A";;
    "svg simple") formatout="l";;
    "wmf") formatout="m";;
    *) formatout="A";;
esac

output_ext=$(echo "$argfromscriptname" | cut -d ' ' -f 1)
[ $output_ext == "svg" ] && output_ext="simple.svg" || output_ext=$output_ext

directory="$(pwd)"
for arg
do
    # input/output
    [ $(env | grep '^TERM') ] && input=$(readlink -f "$arg") || input="$arg"
    input_filename=$(basename "$input")
    [ $(env | grep '^TERM') ] && output="$directory/${input_filename%.*}.$output_ext" || output="${input_filename%.*}.$output_ext"
        
    type=$(file --mime-type -b "$input" | cut -d "/" -f2)
    
    if [ "$type" == "gzip" ] || [ "$type" == "svg+xml" ]; then
        work="1"
        for depend in inkscape # add here all dependencies only with space separator
        do
            depend_check $depend
        done
    else work="0"
    fi
    
    # input mimetype is supported
    if [[ $work != "0" ]]; then
       inkscape -"$formatout" "$output" "$input"
    # input mimetype is not supported
    else notif "Error: \"$input_filename\" mimetype is not supported"
    fi
done
